name: backend deployment with approval

on:
  push:
    branches: [main]
  issue_comment:
    types: [created]

jobs:
  request-approval:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create approval issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "Deploy Approval Needed for Commit ${{ github.sha }}"
          content-filepath: .github/approval.md
          labels: approval, pending
          assignees: 045-ayush
          token: ${{ secrets.PERSONAL_TOKEN }}

  build-and-deploy:
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.issue.title, 'Deploy Approval Needed for Commit') &&
      github.event.comment.body == '/approve' &&
      github.event.comment.user.login == '045-ayush'
    runs-on: ubuntu-latest
    name: build image, publish image & run on VM
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: extracting version from package.json
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: build image
        run: |
          docker build -t ayushwmp/backend:${{ env.VERSION }} .

      - name: Push Docker image
        run: |
          docker push ayushwmp/backend:${{ env.VERSION }}

      - name: Copy SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > ~/sum-app-key.pem
          chmod 600 ~/sum-app-key.pem

      - name: SSH into VM and restart container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/sum-app-key.pem azureuser@52.186.170.5 << 'EOF'
            docker rm -f backend || true
            docker pull ayushwmp/backend:${{ env.VERSION }}
            docker run -d --name backend --network my-net ayushwmp/backend:${{ env.VERSION }}
            docker image prune -af
          EOF

          