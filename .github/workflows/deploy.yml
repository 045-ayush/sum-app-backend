name: backend deployment with manual approval

on:
  push:
    branches: [main]

jobs:
  request-approval:
    runs-on: ubuntu-latest
    outputs:
      approved: ${{ steps.wait-for-approval.outputs.approved }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Manual Approval Issue and Wait
        id: wait-for-approval
        uses: toppulous/create-manual-approval-issue@v1
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}  # Or use ${{ github.token }} if permissions are sufficient
          label: deployment-approval
          title: "[Deploy Approval] Confirm deployment for commit ${{ github.sha }}"
          body: |
            ### Deployment Approval Needed

            Please review and **close this issue** to approve deployment for commit:
            `${{ github.sha }}`

            Only authorized personnel should close this issue.

  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: request-approval

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Extract version from package.json
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ayushwmp/backend:${{ env.VERSION }} .

      - name: Push Docker image
        run: docker push ayushwmp/backend:${{ env.VERSION }}

      - name: Copy SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > ~/sum-app-key.pem
          chmod 600 ~/sum-app-key.pem

      - name: SSH into VM and restart container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/sum-app-key.pem azureuser@52.186.170.5 << 'EOF'
            docker rm -f backend || true
            docker pull ayushwmp/backend:${{ env.VERSION }}
            docker run -d --name backend --network my-net ayushwmp/backend:${{ env.VERSION }}
            docker image prune -af
          EOF

          