name: backend deployment with manual approval

on:
  push:
    branches: [main]

jobs:
  request-approval:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: 045ayush
          minimum-approvals: 1
          issue-title: "[Deploy Approval] Confirm deployment for commit ${{ github.sha }}"
          issue-body: |
            ### ðŸš€ Deployment Approval Needed

            Please review and approve the deployment for commit:
            `${{ github.sha }}`

            âœ… Only the following users are authorized to approve:
            - `045ayush`

            Comment with **"approve"** to proceed.

          exclude-workflow-initiator-as-approver: true
          fail-on-denial: true

  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: request-approval

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Extract version from package.json
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ayushwmp/backend:${{ env.VERSION }} .

      - name: Push Docker image
        run: docker push ayushwmp/backend:${{ env.VERSION }}

      - name: Copy SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > ~/sum-app-key.pem
          chmod 600 ~/sum-app-key.pem

      - name: SSH into VM and restart container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/sum-app-key.pem azureuser@52.186.170.5 << 'EOF'
            docker rm -f backend || true
            docker pull ayushwmp/backend:${{ env.VERSION }}
            docker run -d --name backend --network my-net ayushwmp/backend:${{ env.VERSION }}
            docker image prune -af
          EOF
